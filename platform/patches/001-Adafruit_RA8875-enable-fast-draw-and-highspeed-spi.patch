164a165,166
> #elif defined(SAM3X8)
>   spi_speed = 15000000L;
173a176,179
>   if(Serial) {
>     Serial.print("SPI speed set to "); Serial.print(spi_speed); Serial.println(". This may have been overridden by the TFT Driver Library.");
>   }
> 
718a725,777
>  Draws a series of pixels at the specified location without the overhead.
>  Allows programming of specified width, instead of full line width.
> 
>  @param p     An array of RGB565 color pixels
>  @param num   The number of the pixels to draw
>  @param x     The 0-based x location
>  @param y     The 0-base y location
>  @param width The width of the rectangle to draw in
>  */
> /**************************************************************************/
> void Adafruit_RA8875::drawPixelsArea(uint16_t *p, uint32_t num, int16_t x, int16_t y, int16_t width) {
>     x = applyRotationX(x);
>     y = applyRotationY(y);
> 
>     writeReg(RA8875_CURH0, x);
>     writeReg(RA8875_CURH1, x >> 8);
>     writeReg(RA8875_CURV0, y);
>     writeReg(RA8875_CURV1, y >> 8);
> 
>     uint16_t pixels = 0;
>     uint8_t dir = RA8875_MWCR0_LRTD;
>     if (_rotation == 2) {
>         dir = RA8875_MWCR0_RLTD;
>     }
>     writeReg(RA8875_MWCR0, (readReg(RA8875_MWCR0) & ~RA8875_MWCR0_DIRMASK) | dir);
>     writeCommand(RA8875_MRWC);
>     digitalWrite(_cs, LOW);
>     SPI.transfer(RA8875_DATAWRITE);
>     while (num--) {
>         if(pixels == width) {
>             digitalWrite(_cs, HIGH);
> 
>             y++;
>             writeReg(RA8875_CURH0, x);
>             writeReg(RA8875_CURH1, x >> 8);
> 
>             writeReg(RA8875_CURV0, y);
>             writeReg(RA8875_CURV1, y >> 8);
> 
>             pixels = 0;
> 
>             writeCommand(RA8875_MRWC);
>             digitalWrite(_cs, LOW);
>             SPI.transfer(RA8875_DATAWRITE);
>         }
>         SPI.transfer16(*p++);
>         pixels++;
>     }
>     digitalWrite(_cs, HIGH);
> }
> 
> /**************************************************************************/
> /*!
